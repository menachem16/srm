import React from 'react';
import { trickleListObjects } from '../utils/database';

function AnalyticsDashboard() {   const [analytics, setAnalytics] = React.useState([]);   const [content, setContent] = React.useState([]);   const [stats, setStats] = React.useState({});    React.useEffect(() => {     loadAnalytics();     loadContent();   }, []);    const loadAnalytics = async () => {     try {       const analyticsData = await trickleListObjects('analytics', 500, true);       setAnalytics(analyticsData.items);       calculateStats(analyticsData.items);     } catch (error) {       console.error('Error loading analytics:', error);     }   };    const loadContent = async () => {     try {       const contentData = await trickleListObjects('content', 100, true);       setContent(contentData.items);     } catch (error) {       console.error('Error loading content:', error);     }   };    const calculateStats = (data) => {     const totalViews = data.filter(item => item.objectData.action === 'view').length;     const totalRatings = data.filter(item => item.objectData.action === 'rating').length;     const totalDownloads = data.filter(item => item.objectData.action === 'download').length;          const popularContent = {};     data.forEach(item => {       if (item.objectData.action === 'view') {         popularContent[item.objectData.contentId] = (popularContent[item.objectData.contentId] || 0) + 1;       }     });      setStats({       totalViews,       totalRatings,       totalDownloads,       popularContent: Object.entries(popularContent).sort(([,a], [,b]) => b - a).slice(0, 5)     });   };    try {     return (       <div className="max-w-7xl mx-auto px-6" data-name="analytics-dashboard" data-file="components/AnalyticsDashboard.js">         <h1 className="text-3xl font-bold mb-6">דשבורד אנליטיקס</h1>                  <div className="grid md:grid-cols-4 gap-6 mb-8">           <div className="bg-gray-800 rounded-lg p-6">             <div className="flex items-center">               <div className="icon-eye text-blue-500 text-2xl ml-3"></div>               <div>                 <div className="text-2xl font-bold">{stats.totalViews || 0}</div>                 <div className="text-gray-400">צפיות כולל</div>               </div>             </div>           </div>                      <div className="bg-gray-800 rounded-lg p-6">             <div className="flex items-center">               <div className="icon-star text-yellow-500 text-2xl ml-3"></div>               <div>                 <div className="text-2xl font-bold">{stats.totalRatings || 0}</div>                 <div className="text-gray-400">דירוגים</div>               </div>             </div>           </div>                      <div className="bg-gray-800 rounded-lg p-6">             <div className="flex items-center">               <div className="icon-download text-green-500 text-2xl ml-3"></div>               <div>                 <div className="text-2xl font-bold">{stats.totalDownloads || 0}</div>                 <div className="text-gray-400">הורדות</div>               </div>             </div>           </div>                      <div className="bg-gray-800 rounded-lg p-6">             <div className="flex items-center">               <div className="icon-film text-red-500 text-2xl ml-3"></div>               <div>                 <div className="text-2xl font-bold">{content.length}</div>                 <div className="text-gray-400">תכנים באתר</div>               </div>             </div>           </div>         </div>          <div className="bg-gray-800 rounded-lg p-6">           <h2 className="text-xl font-bold mb-4">תכנים פופולריים</h2>           <div className="space-y-3">             {stats.popularContent?.map(([contentId, views], index) => {               const contentItem = content.find(c => c.objectId === contentId);               return (                 <div key={contentId} className="flex items-center justify-between">                   <div className="flex items-center">                     <div className="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center text-sm font-bold ml-3">                       {index + 1}                     </div>                     <div>                       <div className="font-semibold">{contentItem?.objectData.title || 'תוכן לא זמין'}</div>                       <div className="text-sm text-gray-400">{contentItem?.objectData.category}</div>                     </div>                   </div>                   <div className="text-lg font-bold text-blue-500">{views} צפיות</div>                 </div>               );             })}           </div>         </div>       </div>     );   } catch (error) {     console.error('AnalyticsDashboard component error:', error);     return null;   } }

export default AnalyticsDashboard;
