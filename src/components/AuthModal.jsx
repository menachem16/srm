import React from 'react';

function AuthModal({ onClose, onLogin }) {   const [isLogin, setIsLogin] = React.useState(true);   const [formData, setFormData] = React.useState({     email: '',     password: '',     name: ''   });   const [loading, setLoading] = React.useState(false);   const [error, setError] = React.useState('');    const handleSubmit = async (e) => {     e.preventDefault();     setLoading(true);     setError('');      try {       let result;       if (isLogin) {         result = await AuthUtils.login(formData.email, formData.password);       } else {         result = await AuthUtils.register(formData);       }        if (result.success) {         onLogin(result.user);       } else {         setError(result.error);       }     } catch (error) {       setError('שגיאה בהתחברות');     } finally {       setLoading(false);     }   };    const handleChange = (e) => {     setFormData({       ...formData,       [e.target.name]: e.target.value     });   };    try {     return (       <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" data-name="auth-modal" data-file="components/AuthModal.js">         <div className="bg-gray-800 p-8 rounded-lg w-full max-w-md">           <div className="flex justify-between items-center mb-6">             <h2 className="text-2xl font-bold">               {isLogin ? 'התחברות' : 'הרשמה'}             </h2>             <button                onClick={onClose}               className="text-gray-400 hover:text-white"             >               <div className="icon-x text-xl"></div>             </button>           </div>            <form onSubmit={handleSubmit} className="space-y-4">             {!isLogin && (               <div>                 <label className="block text-sm font-medium mb-2">שם</label>                 <input                   type="text"                   name="name"                   value={formData.name}                   onChange={handleChange}                   className="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded"                   required={!isLogin}                 />               </div>             )}              <div>               <label className="block text-sm font-medium mb-2">אימייל</label>               <input                 type="email"                 name="email"                 value={formData.email}                 onChange={handleChange}                 className="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded"                 required               />             </div>              <div>               <label className="block text-sm font-medium mb-2">סיסמה</label>               <input                 type="password"                 name="password"                 value={formData.password}                 onChange={handleChange}                 className="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded"                 required               />             </div>              {error && (               <div className="text-red-500 text-sm">{error}</div>             )}              <button               type="submit"               disabled={loading}               className="w-full py-2 bg-red-600 hover:bg-red-700 rounded transition-colors disabled:opacity-50"             >               {loading ? 'מתחבר...' : (isLogin ? 'התחברות' : 'הרשמה')}             </button>           </form>            <div className="mt-4 text-center">             <button               onClick={() => setIsLogin(!isLogin)}               className="text-red-500 hover:text-red-400"             >               {isLogin ? 'אין לך חשבון? הירשם כאן' : 'יש לך חשבון? התחבר כאן'}             </button>           </div>         </div>       </div>     );   } catch (error) {     console.error('AuthModal component error:', error);     return null;   } }

export default AuthModal;
