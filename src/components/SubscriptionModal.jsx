import React from 'react';

function SubscriptionModal({ isOpen, onClose, user, onSuccess }) {   const [selectedPlan, setSelectedPlan] = React.useState('basic');   const [loading, setLoading] = React.useState(false);   const [step, setStep] = React.useState(1);   const [paymentData, setPaymentData] = React.useState({     cardNumber: '',     expiryMonth: '',     expiryYear: '',     cvv: '',     cardHolder: ''   });    try {     if (!isOpen) return null;      const plans = [       {         id: 'basic',         name: 'בסיסי',         price: '29.90',         quality: 'HD',         devices: '1',         description: 'מושלם למשתמש יחיד'       },       {         id: 'standard',         name: 'סטנדרטי',         price: '49.90',         quality: 'Full HD',         devices: '2',         description: 'מושלם לזוגות'       },       {         id: 'premium',         name: 'פרימיום',         price: '69.90',         quality: '4K Ultra HD',         devices: '4',         description: 'מושלם למשפחות'       }     ];      const handlePayment = async (e) => {       e.preventDefault();       setLoading(true);        try {         await new Promise(resolve => setTimeout(resolve, 2000));                  await trickleUpdateObject('user', user.objectId, {           ...user,           subscription: selectedPlan,           subscriptionStatus: 'active'         });                  onSuccess({           ...user,           subscription: selectedPlan,           subscriptionStatus: 'active'         });                  setStep(3);       } catch (error) {         alert('שגיאה בעיבוד התשלום');       } finally {         setLoading(false);       }     };      if (step === 1) {       return (         <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" data-name="subscription-modal" data-file="components/SubscriptionModal.js">           <div className="bg-gray-900 rounded-lg p-8 max-w-4xl w-full mx-4 max-h-screen overflow-y-auto">             <div className="flex justify-between items-center mb-6">               <h2 className="text-2xl font-bold">בחירת תוכנית מנוי</h2>               <button onClick={onClose}>                 <div className="icon-x text-xl"></div>               </button>             </div>                          <div className="grid md:grid-cols-3 gap-6">               {plans.map((plan) => (                 <div                    key={plan.id}                   className={`border-2 rounded-lg p-6 cursor-pointer transition-all ${                     selectedPlan === plan.id ? 'border-red-600 bg-red-600 bg-opacity-10' : 'border-gray-700 hover:border-gray-600'                   }`}                   onClick={() => setSelectedPlan(plan.id)}                 >                   <h3 className="text-xl font-bold mb-2">{plan.name}</h3>                   <div className="text-3xl font-bold text-red-600 mb-2">₪{plan.price}</div>                   <div className="text-sm text-gray-400 mb-4">לחודש</div>                   <ul className="space-y-2 text-sm">                     <li>איכות: {plan.quality}</li>                     <li>מכשירים: {plan.devices}</li>                     <li>{plan.description}</li>                   </ul>                 </div>               ))}             </div>                          <div className="mt-8 text-center">               <button                  className="btn-primary text-lg px-8 py-3"                 onClick={() => setStep(2)}               >                 המשך לתשלום               </button>             </div>           </div>         </div>       );     }      if (step === 2) {       return (         <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">           <div className="bg-gray-900 rounded-lg p-8 max-w-md w-full mx-4">             <h2 className="text-2xl font-bold mb-6">פרטי תשלום</h2>                          <div className="mb-6 p-4 bg-gray-800 rounded">               <div className="flex justify-between">                 <span>תוכנית {plans.find(p => p.id === selectedPlan)?.name}</span>                 <span>₪{plans.find(p => p.id === selectedPlan)?.price}</span>               </div>             </div>                          <div className="mb-4">               <label className="block text-sm font-medium mb-2">קוד קופון (אופציונלי)</label>               <CouponInput onApply={(discount) => console.log('Applied discount:', discount)} />             </div>                          <form onSubmit={handlePayment}>               <div className="mb-4">                 <label className="block text-sm font-medium mb-2">מספר כרטיס אשראי</label>                 <input                   type="text"                   required                   placeholder="1234 5678 9012 3456"                   className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded focus:outline-none focus:border-red-600"                   value={paymentData.cardNumber}                   onChange={(e) => setPaymentData({...paymentData, cardNumber: e.target.value})}                 />               </div>                              <div className="grid grid-cols-3 gap-4 mb-4">                 <div>                   <label className="block text-sm font-medium mb-2">חודש</label>                   <select                      required                     className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded focus:outline-none focus:border-red-600"                     value={paymentData.expiryMonth}                     onChange={(e) => setPaymentData({...paymentData, expiryMonth: e.target.value})}                   >                     <option value="">חודש</option>                     {Array.from({length: 12}, (_, i) => (                       <option key={i + 1} value={i + 1}>{i + 1}</option>                     ))}                   </select>                 </div>                 <div>                   <label className="block text-sm font-medium mb-2">שנה</label>                   <select                      required                     className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded focus:outline-none focus:border-red-600"                     value={paymentData.expiryYear}                     onChange={(e) => setPaymentData({...paymentData, expiryYear: e.target.value})}                   >                     <option value="">שנה</option>                     {Array.from({length: 10}, (_, i) => (                       <option key={2024 + i} value={2024 + i}>{2024 + i}</option>                     ))}                   </select>                 </div>                 <div>                   <label className="block text-sm font-medium mb-2">CVV</label>                   <input                     type="text"                     required                     placeholder="123"                     maxLength="3"                     className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded focus:outline-none focus:border-red-600"                     value={paymentData.cvv}                     onChange={(e) => setPaymentData({...paymentData, cvv: e.target.value})}                   />                 </div>               </div>                              <div className="mb-6">                 <label className="block text-sm font-medium mb-2">שם בעל הכרטיס</label>                 <input                   type="text"                   required                   className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded focus:outline-none focus:border-red-600"                   value={paymentData.cardHolder}                   onChange={(e) => setPaymentData({...paymentData, cardHolder: e.target.value})}                 />               </div>                              <button                 type="submit"                 disabled={loading}                 className="w-full btn-primary disabled:opacity-50"               >                 {loading ? 'מעבד תשלום...' : 'שלם עכשיו'}               </button>             </form>           </div>         </div>       );     }      if (step === 3) {       return (         <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">           <div className="bg-gray-900 rounded-lg p-8 max-w-md w-full mx-4 text-center">             <div className="icon-check-circle text-6xl text-green-500 mb-4"></div>             <h2 className="text-2xl font-bold mb-4">התשלום בוצע בהצלחה!</h2>             <p className="text-gray-300 mb-6">               המנוי שלך פעיל ואתה יכול להתחיל לצפות בתכנים עכשיו             </p>             <button                className="btn-primary"               onClick={onClose}             >               חזור לדף הבית             </button>           </div>         </div>       );     }   } catch (error) {     console.error('SubscriptionModal component error:', error);     return null;   } }

export default SubscriptionModal;
