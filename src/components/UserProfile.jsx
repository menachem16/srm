import React from 'react';
import { trickleGetObject, trickleListObjects, trickleUpdateObject } from '../utils/database';

function UserProfile({ user, onUpdate }) {   const [profile, setProfile] = React.useState({     name: user.objectData?.name || '',     email: user.objectData?.email || '',     preferences: {       favoriteGenres: [],       language: 'he',       autoplay: true,       notifications: true     }   });   const [viewingStats, setViewingStats] = React.useState({});   const [loading, setLoading] = React.useState(false);    React.useEffect(() => {     loadUserProfile();     loadViewingStats();   }, [user]);    const loadUserProfile = async () => {     try {       const userData = await trickleGetObject('user', user.objectId);       if (userData.objectData.preferences) {         const prefs = JSON.parse(userData.objectData.preferences);         setProfile(prev => ({ ...prev, preferences: prefs }));       }     } catch (error) {       console.error('Error loading profile:', error);     }   };    const loadViewingStats = async () => {     try {       const favorites = await trickleListObjects(`iptv_favorites:${user.objectId}`, 10, true);       const ratings = await trickleListObjects(`user_ratings:${user.objectId}`, 10, true);              setViewingStats({         favoriteChannels: favorites.items?.length || 0,         ratingsGiven: ratings.items?.length || 0,         avgRating: ratings.items?.length > 0 ?            (ratings.items.reduce((sum, r) => sum + r.objectData.rating, 0) / ratings.items.length).toFixed(1) : 0       });     } catch (error) {       console.error('Error loading stats:', error);     }   };    const saveProfile = async () => {     try {       setLoading(true);       await trickleUpdateObject('user', user.objectId, {         ...user.objectData,         name: profile.name,         preferences: JSON.stringify(profile.preferences),         updatedAt: new Date().toISOString()       });              alert('פרופיל עודכן בהצלחה');       onUpdate();     } catch (error) {       console.error('Error saving profile:', error);       alert('שגיאה בשמירת הפרופיל');     } finally {       setLoading(false);     }   };    try {     return (       <div className="max-w-4xl mx-auto px-6 pt-20" data-name="user-profile" data-file="components/UserProfile.js">         <h1 className="text-3xl font-bold mb-6">הפרופיל שלי</h1>                  <div className="grid md:grid-cols-2 gap-8">           <div className="bg-gray-800 rounded-lg p-6">             <h2 className="text-xl font-bold mb-4">פרטים אישיים</h2>                          <div className="space-y-4">               <div>                 <label className="block text-sm font-medium mb-2">שם</label>                 <input                   type="text"                   value={profile.name}                   onChange={(e) => setProfile({...profile, name: e.target.value})}                   className="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded"                 />               </div>                              <div>                 <label className="block text-sm font-medium mb-2">אימייל</label>                 <input                   type="email"                   value={profile.email}                   disabled                   className="w-full px-3 py-2 bg-gray-600 border border-gray-600 rounded opacity-50"                 />               </div>                              <div>                 <label className="flex items-center">                   <input                     type="checkbox"                     checked={profile.preferences.autoplay}                     onChange={(e) => setProfile({                       ...profile,                       preferences: {...profile.preferences, autoplay: e.target.checked}                     })}                     className="mr-2"                   />                   <span>הפעלה אוטומטית</span>                 </label>               </div>                              <div>                 <label className="flex items-center">                   <input                     type="checkbox"                     checked={profile.preferences.notifications}                     onChange={(e) => setProfile({                       ...profile,                       preferences: {...profile.preferences, notifications: e.target.checked}                     })}                     className="mr-2"                   />                   <span>קבלת התראות</span>                 </label>               </div>             </div>                          <button               onClick={saveProfile}               disabled={loading}               className="w-full mt-6 btn-primary disabled:opacity-50"             >               {loading ? 'שומר...' : 'שמור שינויים'}             </button>           </div>                      <div className="bg-gray-800 rounded-lg p-6">             <h2 className="text-xl font-bold mb-4">סטטיסטיקות צפייה</h2>                          <div className="space-y-4">               <div className="flex justify-between">                 <span>ערוצים מועדפים:</span>                 <span className="font-bold">{viewingStats.favoriteChannels}</span>               </div>                              <div className="flex justify-between">                 <span>דירוגים שנתתי:</span>                 <span className="font-bold">{viewingStats.ratingsGiven}</span>               </div>                              <div className="flex justify-between">                 <span>דירוג ממוצע שלי:</span>                 <span className="font-bold">{viewingStats.avgRating}</span>               </div>             </div>           </div>         </div>       </div>     );   } catch (error) {     console.error('UserProfile component error:', error);     return null;   } }

export default UserProfile;
